#include<bits/stdc++.h> 
  
using namespace std; 
  
class node 
{ 
    public:
    int data; 
    node* left; 
    node* right; 
      
        this->data = data;
        this->left = NULL;
        this->right = NULL;
          
    }
}; 

bool iterativeSearch(node *root, int x) 
{ 
    if (root == NULL) 
        return false; 
  
    queue<node *> q; 
 
    q.push(root); 
  
    while (q.empty() == false) 
    { 
        node *node = q.front(); 
        if (node->data == x) 
            return true; 
  
        q.pop(); 
        if (node->left != NULL) 
            q.push(node->left); 
        if (node->right != NULL) 
            q.push(node->right); 
    } 
  
    return false; 
} 
  
int main() 
{ 
    node* NewRoot=NULL; 
    node *root = new node(2); 
    root->left = new node(7); 
    root->right = new node(5); 
    root->left->right = new node(6); 
    root->left->right->left=new node(1); 
    root->left->right->right=new node(11); 
    root->right->right=new node(9); 
    root->right->right->left=new node(4); 
  
    iterativeSearch(root, 6)? cout << 
    "Found\n": cout << "Not Found\n"; 
    iterativeSearch(root, 12)? cout << 
    "Found\n": cout << "Not Found\n"; 
    return 0; 
}
